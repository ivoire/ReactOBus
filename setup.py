#!/usr/bin/python3
# -*- coding: utf-8 -*-
# vim: set ts=4

# Copyright 2016 Rémi Duraffort
# This file is part of ReactOBus.
#
# ReactOBus is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# ReactOBus is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with ReactOBus.  If not, see <http://www.gnu.org/licenses/>

from setuptools import setup


# This text is generated from README.md using pandoc
long_description = """|Build Status| |Coverage Status| |Code Health|

ReactOBus
=========

ReactOBus is a message broker that helps to create software bus over the
network and to react to some messages.

Features
========

ReactOBus is able to:

-  collect events (as network messages) from different sources
-  publish the stream of events
-  store the events in a database
-  launch specific commands when an event match some conditions

In a near future, ReactOBus will be able to:

-  filter-out some events
-  modify on-the-fly event format
-  ...

Using ReactOBus
===============

Requirements
------------

ReactOBus is known to work with Python3.4 and Python3.5 under Linux.

It depends on (see **requirements.txt**):

-  pyzmq
-  pyYAML
-  SQLAlchemy (if you wish to store events in a database)
-  setproctitle

Installing
----------

ReactOBus is available on
`pypi <https://pypi.python.org/pypi/ReactOBus>`__ and can be installed
with:

::

    pip install ReactOBus

By default, **pip** will not install SQLAlchemy. If need, install it
manually afterward or ask pip to include the right ReactOBus variant
with:

::

    pip install ReactOBus[db]

It's also possible to execute ReactOBus directly from the sources:

::

    git clone https://github.com/ivoire/ReactOBus.git
    cd ReactOBus
    virtualenv -p python3.5 venv
    source venv/bin/activate
    pip install -r requirements.txt
    python reactobus --level DEBUG --conf share/examples/reactobus.yaml

Configuration
-------------

The configuration file is a YAML dictionary with:

-  *inputs*: a list of input streams
-  *outputs*: a list of output streams
-  *core*: configuration of the internal sockets
-  *reactor*: the reacting part of ReactOBus
-  *db*: the database configuration

All keys except *core* and *inputs* are optional. If the optional keys
are not found in the configuration, the corresponding modules won't be
loaded.

Message format
--------------

For the moment, ReactOBus only accepts one type of messages. The
messages should be multipart ZMQ messages with the following meaning:

-  **topic**
-  **uuid** (as generated by uuid.uuid1() in Python)
-  **datetime** when the message was generated (isoformat)
-  **username** of the sending process or user
-  **data** as JSON

Testing ReactOBus
=================

In order to run ReactOBus automatic tests, you will have to install
*py.test*:

::

    pip install pytest

Then run the tests using:

::

    py.test tests -v
    [...]
    tests/test_core.py::test_core PASSED
    tests/test_db.py::test_run PASSED
    tests/test_db.py::test_errors PASSED
    [...]

On each push, the tests and the coverage are computed on:

-  `Test results <https://travis-ci.org/ivoire/ReactOBus>`__
-  `Coverage report <https://coveralls.io/github/ivoire/ReactOBus>`__
-  `Static analysis <https://landscape.io/github/ivoire/ReactOBus>`__

.. |Build Status| image:: https://travis-ci.org/ivoire/ReactOBus.svg?branch=master
   :target: https://travis-ci.org/ivoire/ReactOBus
.. |Coverage Status| image:: https://coveralls.io/repos/github/ivoire/ReactOBus/badge.svg?branch=master
   :target: https://coveralls.io/github/ivoire/ReactOBus?branch=master
.. |Code Health| image:: https://landscape.io/github/ivoire/ReactOBus/master/landscape.svg?style=flat
   :target: https://landscape.io/github/ivoire/ReactOBus/master
"""

setup(
    name="ReactOBus",
    version="0.2",
    description="A message broker to create software bus over the network",
    long_description=long_description,
    url="https://github.com/ivoire/ReactOBus",
    classifiers=[
        "Development Status :: 5 - Production/Stable",
        "Environment :: Console",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
        "Operating System :: POSIX :: Linux",
        "Programming Language :: Python :: 3.4",
        "Programming Language :: Python :: 3.5",
        "Programming Language :: Python :: 3.6",
        "Programming Language :: Python :: 3 :: Only",
        "Topic :: Communications",
        "Topic :: Software Development :: Testing",
        "Topic :: System :: Distributed Computing",
        "Topic :: System :: Networking",
    ],
    author="Rémi Duraffort",
    author_email="ivoire@videolan.org",
    license="AGPLv3+",
    packages=["ReactOBus"],
    scripts=["reactobus"],
    install_requires=[
        "PyYAML",
        "pyzmq",
        "setproctitle"
    ],
    extras_require={
        # SQLAlchemy is optional because the ReactOBus.db module is loaded only
        # when used
        'db':  ["SQLAlchemy"]
    }
)
